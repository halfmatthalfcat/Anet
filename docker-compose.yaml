services:
  pg:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      ALLOW_EMPTY_PASSWORD: yes
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  migrations:
    build:
      context: .
      dockerfile: migrations.Dockerfile
      args:
        RUNTIME: linux-arm64
    depends_on:
      pg:
        condition: service_healthy
    command: --connection 'Host=pg;Username=postgres'
  primary:
    build:
      context: .
      dockerfile: app.Dockerfile
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      CONNECTION_STRING: 'Host=pg;Username=postgres'
      REMOTE_PORT: 5001
      REMOTE_HOST: primary
      PEERS__0: akka.tcp://AnetSystem@primary:5001
    ports:
      - "8000:5000"
      - "5001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/healthz/akka/ready/cluster"]
      interval: 5s
      timeout: 15s
      retries: 5
  peer1:
    build:
      context: .
      dockerfile: app.Dockerfile
    depends_on:
      migrations:
        condition: service_completed_successfully
      primary:
        condition: service_healthy
    environment:
      CONNECTION_STRING: 'Host=pg;Username=postgres'
      REMOTE_PORT: 5002
      REMOTE_HOST: peer1
      PEERS__0: akka.tcp://AnetSystem@primary:5001
    ports:
      - "8001:5000"
      - "5002"
  peer2:
    build:
      context: .
      dockerfile: app.Dockerfile
    depends_on:
      migrations:
        condition: service_completed_successfully
      primary:
        condition: service_healthy
    environment:
      CONNECTION_STRING: 'Host=pg;Username=postgres'
      REMOTE_PORT: 5003
      REMOTE_HOST: peer2
      PEERS__0: akka.tcp://AnetSystem@primary:5001
    ports:
      - "8002:5000"
      - "5003"
